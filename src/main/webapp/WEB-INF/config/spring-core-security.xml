<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:security="http://www.springframework.org/schema/security"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd

       http://www.springframework.org/schema/security
       http://www.springframework.org/schema/security/spring-security-3.2.xsd">

    <!--全局权限拦截器-->
    <!--开启 security AOP 在每个方法执行前 先验证权限 方法上面要加  @PreAuthorize("hasRole('ROLE_USER')")-->
    <security:global-method-security pre-post-annotations="enabled" proxy-target-class="true"/>
    <!--spring-security-->
    <security:http auto-config="true" use-expressions="true">
        <!--全局拦截-->
        <!--<security:intercept-url pattern="/*" access="hasRole('ROLE_USER')"/>-->
        <!--允许所有人访问-->
        <security:intercept-url pattern="/resource/**" access="permitAll" />
        <!--允许ROLE_ADMIN权限访问-->
        <!--<security:intercept-url pattern="/WEB-INF/resource/static/**" access="hasRole('ROLE_ADMIN')" />-->

        <!-- login-page:默认指定的登录页面. authentication-failure-url:出错后跳转页面. default-target-url:成功登陆后跳转页面 -->
        <security:form-login login-page="/resource/static/login.html" authentication-failure-url="/resource/static/login_failure.html"
                             default-target-url="/resource/static/test.html" />
        <!--
            invalidate-session：指定在退出系统时是否要销毁Session。logout-success-url：退出系统后转向的URL。logout-url：指定了用于响应退出系统请求的URL。其默认值为：/j_spring_security_logout。
        -->
        <security:logout invalidate-session="true" logout-success-url="/views/jsp/success.jsp" logout-url="/j_spring_security_logout" />
        <!--
            max-sessions:允许用户帐号登录的次数。范例限制用户只能登录一次。exception-if-maximum-exceeded:
            默认为false，此值表示：用户第二次登录时，前一次的登录信息都被清空。当exception-if-maximum-exceeded="true"时系统会拒绝第二次登录。
        -->

        <security:session-management>
            <security:concurrency-control error-if-maximum-exceeded="true" max-sessions="1" />
        </security:session-management>

    </security:http>

    <security:authentication-manager>
        <security:authentication-provider user-service-ref="customUserDetailsService">
            <security:password-encoder ref="passwordEncoder">
                <security:salt-source user-property="username"/>
            </security:password-encoder>
        </security:authentication-provider>
    </security:authentication-manager>
    <!-- 对密码进行MD5编码 -->
    <bean id="passwordEncoder" class="org.springframework.security.authentication.encoding.Md5PasswordEncoder" />
    <bean id="customUserDetailsService" class="com.sardine.base.service.CustomerUserDetailsService" />



</beans>